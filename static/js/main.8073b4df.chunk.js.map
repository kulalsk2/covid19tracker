{"version":3,"sources":["constants.js","components/Card/Card.js","components/util.js","components/Map/CircleMap.js","components/Charts/Chart.js","components/Table/Table.js","App.js","index.js"],"names":["latlong","statecode","name","lat","long","StatusCard","title","isColor1","isColor2","isColor3","isColor4","cases","active","onClick","isDark","Card","className","CardContent","Typography","color","prettyNumber","stat","numeral","format","casesTypeValues","multiplier","confirmed","recovered","deaths","showCirclesOnMap","data","casesType","map","state","i","Circle","center","lng","fillOpacity","stroke","fillColor","radius","Math","sqrt","Popup","CircleMap","mapData","zoomControl","zoom","maxZoom","doubleClickZoom","scrollWheelZoom","dragging","animate","minZoom","attributionControl","bounds","TileLayer","url","attribution","options","bezierCurve","legend","display","responsive","maintainAspectRatio","scales","xAxes","ticks","gridLines","drawBorder","yAxes","Charts","lineChart1","labels","date","datasets","dailydeceased","label","borderColor","fill","backgroundColor","borderWidth","text","fontColor","fontSize","position","lineChart2","dailyconfirmed","lineChart3","dailyrecovered","inrformat","require","headerColumns","id","align","value","toLocaleString","StateInfoTable","states","classes","makeStyles","tablecontainer","borderRadius","boxShadow","marginBottom","marginTop","height","oddRow","evenRow","cellOfROw","border","useStyles","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","random","App","useState","setData","JSON","parse","localStorage","getItem","darkMode","setDarkMode","window","innerWidth","windowWidth","setWindowWidth","setStatesData","selectedState","setSelectedState","selectedStateInfo","setSelectedStateInfo","setCasesType","mapCenter","setMapCenter","useEffect","setItem","stringify","handleResize","e","addEventListener","fetch","then","response","json","DataofStates","statewise","length","j","temp","push","countrySelect","FormControl","Select","variant","onChange","event","stateCodeOfSelectedState","target","console","log","stateData","filter","MenuItem","FormHelperText","type","checked","prevmode","htmlFor","cases_time_series","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8073b4df.chunk.js","sourcesContent":["export const latlong = [\r\n  { statecode: \"TT\", name: \"Total\", lat: 24.070541, long: 83.003948 },\r\n  {\r\n    statecode: \"MH\",\r\n    name: \"Maharashtra\",\r\n    lat: 19.076,\r\n    long: 72.8777,\r\n  },\r\n  {\r\n    statecode: \"AP\",\r\n    name: \"Andhra Pradesh\",\r\n    lat: 14.7504291,\r\n    long: 78.57002559,\r\n  },\r\n  {\r\n    statecode: \"KA\",\r\n    name: \"Karnataka\",\r\n    lat: 12.57038129,\r\n    long: 76.91999711,\r\n  },\r\n  {\r\n    statecode: \"TN\",\r\n    name: \"Tamil Nadu\",\r\n    lat: 13.0827,\r\n    long: 80.2707,\r\n  },\r\n  {\r\n    statecode: \"UP\",\r\n    name: \"Uttar Pradesh\",\r\n    lat: 27.59998069,\r\n    long: 78.05000565,\r\n  },\r\n  {\r\n    statecode: \"DL\",\r\n    name: \"Delhi\",\r\n    lat: 28.6699929,\r\n    long: 77.23000403,\r\n  },\r\n  {\r\n    statecode: \"WB\",\r\n    name: \"West Bengal\",\r\n    lat: 22.58039044,\r\n    long: 88.32994665,\r\n  },\r\n  { statecode: \"OR\", name: \"Odisha\", lat: 20.94092, long: 84.803467 },\r\n  {\r\n    statecode: \"KL\",\r\n    name: \"Kerala\",\r\n    lat: 8.5241,\r\n    long: 76.9366,\r\n  },\r\n  {\r\n    statecode: \"TG\",\r\n    name: \"Telangana\",\r\n    lat: 18.1124,\r\n    long: 79.0193,\r\n  },\r\n  {\r\n    statecode: \"BR\",\r\n    name: \"Bihar\",\r\n    lat: 25.5941,\r\n    long: 85.1376,\r\n  },\r\n  { statecode: \"AS\", name: \"Assam\", lat: 26.244156, long: 92.537842 },\r\n\r\n  { statecode: \"GJ\", name: \"Gujarat\", lat: 22.309425, long: 72.13623 },\r\n  {\r\n    statecode: \"RJ\",\r\n    name: \"Rajasthan\",\r\n    lat: 25.9124,\r\n    long: 73.7873,\r\n  },\r\n  {\r\n    statecode: \"MP\",\r\n    name: \"Madhya Pradesh\",\r\n    lat: 23.2599,\r\n    long: 77.4126,\r\n  },\r\n  {\r\n    statecode: \"HR\",\r\n    name: \"Haryana\",\r\n    lat: 28.45000633,\r\n    long: 77.01999101,\r\n  },\r\n  {\r\n    statecode: \"CT\",\r\n    name: \"Chhattisgarh\",\r\n    lat: 21.295132,\r\n    long: 81.828232,\r\n  },\r\n  {\r\n    statecode: \"PB\",\r\n    name: \"Punjab\",\r\n    lat: 31.51997398,\r\n    long: 75.98000281,\r\n  },\r\n  {\r\n    statecode: \"JH\",\r\n    name: \"Jharkhand\",\r\n    lat: 23.80039349,\r\n    long: 86.41998572,\r\n  },\r\n  {\r\n    statecode: \"JK\",\r\n    name: \"Jammu and Kashmir\",\r\n    lat: 34.29995933,\r\n    long: 74.46665849,\r\n  },\r\n  {\r\n    statecode: \"UT\",\r\n    name: \"Uttarakhand\",\r\n    lat: 26.8467,\r\n    long: 80.9462,\r\n  },\r\n  { statecode: \"GA\", name: \"Goa\", lat: 15.491997, long: 73.81800065 },\r\n  {\r\n    statecode: \"PY\",\r\n    name: \"Puducherry\",\r\n    lat: 11.93499371,\r\n    long: 79.83000037,\r\n  },\r\n  {\r\n    statecode: \"TR\",\r\n    name: \"Tripura\",\r\n    lat: 23.83540428,\r\n    long: 91.27999914,\r\n  },\r\n  {\r\n    statecode: \"HP\",\r\n    name: \"Himachal Pradesh\",\r\n    lat: 31.10002545,\r\n    long: 77.571167,\r\n  },\r\n  {\r\n    statecode: \"CH\",\r\n    name: \"Chandigarh\",\r\n    lat: 30.71999697,\r\n    long: 77.16659704,\r\n  },\r\n  {\r\n    statecode: \"MN\",\r\n    name: \"Manipur\",\r\n    lat: 24.79997072,\r\n    long: 93.95001705,\r\n  },\r\n  {\r\n    statecode: \"AR\",\r\n    name: \"Arunachal Pradesh\",\r\n    lat: 27.10039878,\r\n    long: 93.61660071,\r\n  },\r\n  {\r\n    statecode: \"NL\",\r\n    name: \"Nagaland\",\r\n    lat: 25.6669979,\r\n    long: 94.11657019,\r\n  },\r\n  {\r\n    statecode: \"ML\",\r\n    name: \"Meghalaya\",\r\n    lat: 25.57049217,\r\n    long: 91.8800142,\r\n  },\r\n  { statecode: \"LA\", name: \"Ladakh\", lat: 34.209515, long: 77.615112 },\r\n  {\r\n    statecode: \"AN\",\r\n    name: \"Andaman and Nicobar Islands\",\r\n    lat: 11.66702557,\r\n    long: 92.73598262,\r\n  },\r\n  {\r\n    statecode: \"DN\",\r\n    name: \"Dadra and Nagar Haveli and Daman and Diu\",\r\n    lat: 20.26657819,\r\n    long: 73.0166178,\r\n  },\r\n  {\r\n    statecode: \"SK\",\r\n    name: \"Sikkim\",\r\n    lat: 27.3333303,\r\n    long: 88.6166475,\r\n  },\r\n  {\r\n    statecode: \"MZ\",\r\n    name: \"Mizoram\",\r\n    lat: 23.71039899,\r\n    long: 92.72001461,\r\n  },\r\n  { statecode: \"UN\", name: \"State Unassigned\", lat: 0, long: 0 },\r\n  {\r\n    statecode: \"LD\",\r\n    name: \"Lakshadweep\",\r\n    lat: 10.56257331,\r\n    long: 72.63686717,\r\n  },\r\n];\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default function StatusCard({\r\n  title,\r\n  isColor1,\r\n  isColor2,\r\n  isColor3,\r\n  isColor4,\r\n  cases,\r\n  active,\r\n  onClick,\r\n  isDark,\r\n}) {\r\n  return (\r\n    <Card\r\n      onClick={onClick}\r\n      className={`card ${isDark && \"card--darkmode\"} ${\r\n        active && \"card--selected\"\r\n      }\r\n       ${isColor2 && \"card--color2\"}\r\n      ${isColor3 && \"card--color3\"}\r\n      ${isColor4 && \"card--color4\"}`}\r\n    >\r\n      <CardContent>\r\n        <Typography\r\n          className={`card_title ${isDark && \"card--darkmode\"}`}\r\n          color=\"textSecondary\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <h2\r\n          className={`\r\n      ${isColor1 && \"card_color1\"}\r\n      ${isColor2 && \"card_color2\"}\r\n      ${isColor3 && \"card_color3\"}\r\n      ${isColor4 && \"card_color4\"}`}\r\n        >\r\n          {cases}\r\n        </h2>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nexport const prettyNumber = (stat) =>\r\n  stat ? `${numeral(stat).format(\"0a\")}` : \"+0\";\r\n\r\nconst casesTypeValues = {\r\n  active: {\r\n    color: \"#a820ff\",\r\n    multiplier: 1200,\r\n  },\r\n  confirmed: {\r\n    color: \"#3783ea\",\r\n    multiplier: 180,\r\n  },\r\n  recovered: {\r\n    color: \"#2c9947\",\r\n    multiplier: 200,\r\n  },\r\n  deaths: {\r\n    color: \"#e9113f\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const showCirclesOnMap = (data, casesType = \"active\") =>\r\n  data.map((state, i) => {\r\n    if (state.statecode !== \"TT\") {\r\n      return (\r\n        <Circle\r\n          key={i}\r\n          center={[state.lat, state.lng]}\r\n          fillOpacity={0.3}\r\n          stroke={true}\r\n          color={casesTypeValues[casesType].color}\r\n          fillColor={casesTypeValues[casesType].color}\r\n          radius={\r\n            Math.sqrt(state[casesType]) * casesTypeValues[casesType].multiplier\r\n          }\r\n        >\r\n          <div className=\"popupdarkMode\">\r\n            <Popup key={state.statecode}>\r\n              <div className={\"info-container\"}>\r\n                <div className=\"info-name\">{state.state}</div>\r\n                <div className=\"info-active\">Active:{state.active}</div>\r\n                <div className=\"info-confirmed\">\r\n                  Confirmed:{state.confirmed}\r\n                </div>\r\n                <div className=\"info-recovered\">\r\n                  Recovered:{state.recovered}\r\n                </div>\r\n                <div className=\"info-deaths\">Deaths: {state.deaths}</div>\r\n              </div>\r\n            </Popup>\r\n          </div>\r\n        </Circle>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  });\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport { showCirclesOnMap } from \"../util\";\r\nimport \"./CircleMap.css\";\r\n\r\nconst zoom = 7;\r\nconst minLat = 27.1751;\r\nconst maxLat = 20.940737;\r\nconst minLong = 70.23846;\r\nconst maxLong = 93.781153;\r\n\r\nfunction CircleMap({ casesType, center, mapData, isDark }) {\r\n  return (\r\n    <div className={`map ${isDark && \"map--darkMode\"}`}>\r\n      <LeafletMap\r\n        zoomControl={false}\r\n        key=\"maps\"\r\n        center={center}\r\n        zoom={zoom}\r\n        maxZoom={10}\r\n        doubleClickZoom={true}\r\n        scrollWheelZoom={true}\r\n        dragging={true}\r\n        animate={true}\r\n        minZoom={4}\r\n        attributionControl={true}\r\n        bounds={[\r\n          [minLat, minLong],\r\n          [maxLat, maxLong],\r\n        ]}\r\n      >\r\n        <TileLayer\r\n          url={\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}\r\n          attribution={'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n          }\r\n        />\r\n        {showCirclesOnMap(mapData, casesType, isDark)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CircleMap;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Chart.css\";\r\n\r\nconst options = {\r\n  bezierCurve: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: { display: false },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst Charts = ({ data, isDark }) => {\r\n  const lineChart1 = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.map(({ dailydeceased }) => dailydeceased),\r\n            label: \"Deaths\",\r\n            borderColor: \"#ff3333\",\r\n            fill: true,\r\n            backgroundColor: \"rgba(218, 31, 31, 0.5)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Deceased Cases\",\r\n          fontColor: `${isDark ? \"white\" : \"grey\"}`,\r\n          fontSize: 20,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart2 = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.map(({ dailyconfirmed }) => dailyconfirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"rgba(56, 56, 244, 0.5)\",\r\n            borderWidth: 1,\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Confirmed Cases\",\r\n          fontColor: `${isDark ? \"white\" : \"grey\"}`,\r\n          fontSize: 20,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart3 = data ? (\r\n    <Line\r\n      data={{\r\n        labels: data.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: data.map(({ dailyrecovered }) => dailyrecovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"#33ff33\",\r\n            fill: true,\r\n            backgroundColor: \"rgba(56, 244,56 , 0.5)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        ...options,\r\n        title: {\r\n          display: true,\r\n          text: \"Recovered Cases\",\r\n          fontSize: 20,\r\n          fontColor: `${isDark ? \"white\" : \"grey\"}`,\r\n          position: \"left\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className={`chart ${isDark && \"chart--darkMode\"}`}>{lineChart1}</div>\r\n      <div className={`chart ${isDark && \"chart--darkMode\"}`}>{lineChart2}</div>\r\n      <div className={`chart ${isDark && \"chart--darkMode\"}`}>{lineChart3}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst inrformat = require(\"inrformat\");\r\n\r\nconst headerColumns = [\r\n  { id: \"state\", label: \"State\", align: \"left\" },\r\n  { id: \"code\", label: \"StateCode\", align: \"center\" },\r\n  {\r\n    id: \"active\",\r\n    label: \"Active\",\r\n\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"confirmed\",\r\n    label: \"Confirmed\",\r\n\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"recovered\",\r\n    label: \"Recovered\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"deaths\",\r\n    label: \"Deceased\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n];\r\n\r\nexport default function StateInfoTable({ states, isDark }) {\r\n  const useStyles = makeStyles({\r\n    tablecontainer: {\r\n      backgroundColor: `${isDark ? \"black\" : \"white\"}`,\r\n      borderRadius: 10,\r\n      boxShadow: \"0 0 8px -4px rgba(0, 0, 0, 0.6)\",\r\n      marginBottom: 10,\r\n      marginTop: 10,\r\n      height: 600,\r\n    },\r\n    oddRow: {\r\n      backgroundColor: `${isDark ? \"#424242\" : \"#f3f2f8\"}`,\r\n    },\r\n    evenRow: {\r\n      backgroundColor: `${isDark ? \"#616161\" : \"#bdbdbd\"}`,\r\n    },\r\n    cellOfROw: isDark\r\n      ? { borderRadius: 15, border: 0, color: \"white\" }\r\n      : { borderRadius: 15, border: 0, color: \"black\" },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  let i = 0;\r\n  return (\r\n    <TableContainer className={classes.tablecontainer}>\r\n      <Table stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            {headerColumns.map((column) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                style={\r\n                  isDark\r\n                    ? { backgroundColor: \"#1f1f1f\", color: \"white\", border: 0 }\r\n                    : {}\r\n                }\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {states.map((state) => {\r\n            return (\r\n              <TableRow\r\n                key={Math.random() / Math.random()}\r\n                className={i++ % 2 ? classes.oddRow : classes.evenRow}\r\n              >\r\n                <TableCell\r\n                  key={state.state}\r\n                  align=\"left\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {state.state}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={state.statecode}\r\n                  align=\"center\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {state.statecode}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {inrformat(state.active)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {inrformat(state.confirmed)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {inrformat(state.recovered)}\r\n                </TableCell>\r\n                <TableCell\r\n                  key={Math.random() / Math.random()}\r\n                  align=\"center\"\r\n                  className={classes.cellOfROw}\r\n                >\r\n                  {inrformat(state.deaths)}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { latlong } from \"./constants\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport StatusCard from \"./components/Card/Card\";\r\nimport CircleMap from \"./components/Map/CircleMap\";\r\nimport \"./App.css\";\r\nimport Charts from \"./components/Charts/Chart\";\r\nimport { prettyNumber } from \"./components/util\";\r\nimport StateInfoTable from \"./components/Table/Table\";\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [darkMode, setDarkMode] = useState(getInitialMode());\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [states, setStatesData] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(\"TT\");\r\n  const [selectedStateInfo, setSelectedStateInfo] = useState({});\r\n  const [casesType, setCasesType] = useState(\"active\");\r\n  const [mapCenter, setMapCenter] = useState([24.070541, 83.003948]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"dark\", JSON.stringify(darkMode));\r\n  }, [darkMode]);\r\n\r\n  function getInitialMode() {\r\n    return JSON.parse(localStorage.getItem(\"dark\"));\r\n  }\r\n\r\n  const handleResize = (e) => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.covid19india.org/data.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        let DataofStates = [];\r\n        for (let i = 0; i < data.statewise.length; i++) {\r\n          for (let j = 0; j < latlong.length; j++) {\r\n            if (data.statewise[i].statecode === latlong[j].statecode) {\r\n              let temp = {\r\n                ...data.statewise[i],\r\n                lat: latlong[j].lat,\r\n                lng: latlong[j].long,\r\n                name: latlong[j].name,\r\n              };\r\n              DataofStates.push(temp);\r\n            }\r\n          }\r\n        }\r\n        setStatesData(DataofStates);\r\n        setSelectedStateInfo(DataofStates[0]);\r\n      });\r\n    fetch(\"https://api.covid19india.org/v4/min/timeseries.min.json\");\r\n  }, []);\r\n\r\n  const onStateChange = (event) => {\r\n    const stateCodeOfSelectedState = event.target.value;\r\n    setSelectedState(stateCodeOfSelectedState);\r\n    console.log(\"statecode -----\", stateCodeOfSelectedState);\r\n    const stateData = states.filter((state) => {\r\n      return state.statecode === stateCodeOfSelectedState;\r\n    })[0];\r\n    setSelectedStateInfo(stateData);\r\n    setMapCenter([stateData.lat, stateData.lng]);\r\n  };\r\n\r\n  const countrySelect = (\r\n    <FormControl className=\"app_dropdown\">\r\n      <Select\r\n        style={\r\n          darkMode\r\n            ? {\r\n                backgroundColor: \"#1f1f1f\",\r\n                color: \"white\",\r\n              }\r\n            : {}\r\n        }\r\n        className=\"app_select\"\r\n        variant=\"outlined\"\r\n        value={selectedState}\r\n        onChange={onStateChange}\r\n      >\r\n        {states.map((state) => (\r\n          <MenuItem\r\n            key={state.statecode}\r\n            value={state.statecode}\r\n            style={{\r\n              backgroundColor: `${darkMode && \"#1f1f1f\"}`,\r\n              color: `${darkMode && \"white\"}`,\r\n            }}\r\n          >\r\n            {state.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText style={darkMode ? { color: \"white\" } : {}}>\r\n        Select state from Here\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n\r\n  return (\r\n    <div className={`app ${darkMode && \"dark-mode\"}`}>\r\n      <div className={`app_header ${darkMode && \"dark-mode-header\"}`}>\r\n        <nav className=\"navbar\">Covid 19 India</nav>\r\n        <div className=\"toggle-container\">\r\n          <span style={{ color: darkMode ? \"grey\" : \"yellow\" }}>☀︎</span>\r\n          <span className=\"toggle\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={darkMode}\r\n              className=\"checkbox\"\r\n              id=\"checkbox\"\r\n              onChange={() => setDarkMode((prevmode) => !prevmode)}\r\n            />\r\n            <label htmlFor=\"checkbox\" />\r\n          </span>\r\n          <span style={{ color: darkMode ? \"slateblue\" : \"grey\" }}>☾</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"app_body\">\r\n        <div className=\"app_right_left\">\r\n          <div className=\"app_right\">\r\n            <div className=\"app_right_select\">{countrySelect}</div>\r\n            <div className=\"app_status\">\r\n              <StatusCard\r\n                isDark={darkMode}\r\n                onClick={(e) => setCasesType(\"active\")}\r\n                title=\"Active\"\r\n                active={casesType === \"active\"}\r\n                isColor1={true}\r\n                cases={\r\n                  windowWidth < 770\r\n                    ? prettyNumber(selectedStateInfo.active)\r\n                    : selectedStateInfo.active\r\n                }\r\n              />\r\n              <StatusCard\r\n                isDark={darkMode}\r\n                active={casesType === \"confirmed\"}\r\n                isColor2={true}\r\n                onClick={(e) => setCasesType(\"confirmed\")}\r\n                title=\"Confirmed\"\r\n                cases={\r\n                  windowWidth < 770\r\n                    ? prettyNumber(selectedStateInfo.confirmed)\r\n                    : selectedStateInfo.confirmed\r\n                }\r\n              />\r\n              <StatusCard\r\n                isDark={darkMode}\r\n                active={casesType === \"recovered\"}\r\n                isColor3={true}\r\n                onClick={(e) => setCasesType(\"recovered\")}\r\n                title=\"Recovered\"\r\n                cases={\r\n                  windowWidth < 770\r\n                    ? prettyNumber(selectedStateInfo.recovered)\r\n                    : selectedStateInfo.recovered\r\n                }\r\n              />\r\n              <StatusCard\r\n                isDark={darkMode}\r\n                active={casesType === \"deaths\"}\r\n                isColor4={true}\r\n                onClick={(e) => setCasesType(\"deaths\")}\r\n                title=\"Deaths\"\r\n                cases={\r\n                  windowWidth < 770\r\n                    ? prettyNumber(selectedStateInfo.deaths)\r\n                    : selectedStateInfo.deaths\r\n                }\r\n              />\r\n            </div>\r\n            <CircleMap\r\n              isDark={darkMode}\r\n              center={mapCenter}\r\n              casesType={casesType}\r\n              mapData={states}\r\n            />\r\n          </div>\r\n          <div className=\"app_left\">\r\n            <Charts isDark={darkMode} data={data.cases_time_series} />\r\n          </div>\r\n        </div>\r\n        <div className=\"stateinfotable\">\r\n          <StateInfoTable states={states} isDark={darkMode} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}